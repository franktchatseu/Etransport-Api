description des enpoints du module association

1- test des enpoints de la classe association avec pour prefix 'associations'


    Route::group(['prefix' => 'associations'], function () {
        Route::get('/', 'Association\AssociationController@index');
        Route::get('/search', 'Association\AssociationController@search');
        Route::get('/{id}', 'Association\AssociationController@find');
        Route::delete('/{id}', 'Association\AssociationController@destroy');
        Route::post('/', 'Association\AssociationController@store');
        Route::match(['post', 'put'], '/{id}', 'Association\AssociationController@update');
    });


    - la methode get
        - lister tous les associations de la bd
                DONNÉE ENTRER
                URL: http://localhost:8000/api/associations/associations

                REPONSE:

{
    "current_page": 1,
    "data": [
        {
            "id": 1,
            "type_id": 7,
            "name": "Dewayne McDermott",
            "slogan": "Necessitatibus sunt ipsum dolor deleniti dolorem nihil laboriosam.",
            "description": "Quia aut laudantium minima maxime voluptatem. Deserunt voluptatem qui magnam autem.",
            "dateCreation": "2008-05-07",
            "reglement": "Sunt voluptatem voluptas fugit sint sit.",
            "created_at": "2020-06-19T10:14:44.000000Z",
            "updated_at": "2020-06-19T10:14:44.000000Z",
            "deleted_at": null,
            "type": null
        }
    ],
    "first_page_url": "http://localhost:8000/api/associations/associations?page=1",
    "from": 1,
    "next_page_url": "http://localhost:8000/api/associations/associations?page=2",
    "path": "http://localhost:8000/api/associations/associations",
    "per_page": 15,
    "prev_page_url": null,
    "to": 15
}
      - rechercher un association par son id 
            DONNÉE ENTRER
            URL: http://localhost:8000/api/associations/associations/2
            RESULTAT: 
           
            {
                "id": 2,
                "type_id": 7,
                "name": "Arturo Fadel",
                "slogan": "Corporis doloremque in beatae iusto.",
                "description": "Rerum quae vel dolores qui. Omnis dolorem aut consequatur et praesentium accusamus laudantium.",
                "dateCreation": "1975-10-19",
                "reglement": "Molestiae eveniet facilis et soluta atque.",
                "created_at": "2020-06-19T10:14:44.000000Z",
                "updated_at": "2020-06-19T10:14:44.000000Z",
                "deleted_at": null
            }

    -rechercher un association à partir d'un element et d'une colonne
            DONNÉE ENTRER:
            URL: http://localhost:8000/api/associations/associations/search?q=dai&field=name

            REPONSE:
                {
                    "current_page": 1,
                    "data": [
                        {
                            "id": 97,
                            "type_id": 1,
                            "name": "Vern Daniel MD",
                            "slogan": "Quis sequi ut pariatur iusto deleniti commodi vel sunt.",
                            "description": "Ducimus impedit reiciendis sed qui. Cupiditate explicabo vitae accusantium saepe et unde et ullam. Neque rem voluptas magnam. Quod unde quo eaque.",
                            "dateCreation": "1976-04-16",
                            "reglement": "Quas minus velit dolores est cupiditate.",
                            "created_at": "2020-06-19T10:14:45.000000Z",
                            "updated_at": "2020-06-19T10:14:45.000000Z",
                            "deleted_at": null
                        }
                    ],
                    "first_page_url": "http://localhost:8000/api/associations/associations/search?page=1",
                    "from": 1,
                    "next_page_url": null,
                    "path": "http://localhost:8000/api/associations/associations/search",
                    "per_page": 15,
                    "prev_page_url": null,
                    "to": 5
                }
    - la methode post
        - ajour d'un nouveau association

        // j'ai un probleme avec la l'attribut des reglement je ne sais si c'est un archive
            DONNÉE ENTRER
         {
                "reglement": {
                    "images": []
                },
                "name": "jude",
                "type_id": "5",
                "slogan": "theo",
                "description": "theo",
                "dateCreation": "1998-01-14"
            }
            URL: http://localhost:8000/api/associations/associations
            REPONSE
                {
                    "reglement": {
                        "images": []
                    },
                    "name": "jude",
                    "type_id": "5",
                    "slogan": "theo",
                    "description": "theo",
                    "dateCreation": "1998-01-14",
                    "updated_at": "2020-06-19T12:43:58.000000Z",
                    "created_at": "2020-06-19T12:43:58.000000Z",
                    "id": 114
                }

    - modification d'un association

        DONNÉE ENTRER

         {
                "reglement": {
                    "images": []
                },
                "name": "jude",
                "type_id": "5",
                "slogan": "theophane",
                "description": "theo",
                "dateCreation": "1998-01-14"
            }

            URL: http://localhost:8000/api/associations/associations/114

            REPONSE
                {
                    "reglement": {
                        "images": []
                    },
                    "name": "jude",
                    "type_id": "5",
                    "slogan": "theophane",
                    "description": "theo",
                    "dateCreation": "1998-01-14",
                    "updated_at": "2020-06-19T12:43:58.000000Z",
                    "created_at": "2020-06-19T12:43:58.000000Z",
                    "id": 114
                }

    la methode delete

            -suppression d'un association de la bd

                DONNÉE ENTRER

                URL: http://localhost:8000/api/associations/associations/22

                REPONSE:
                []


///////////////////////////////////////////////////////////////////////////////////////////////////////////////    

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

    Route::group(['prefix' => 'types'], function () {
        Route::get('/', 'Association\TypeAssociationController@index');
        Route::get('/search', 'Association\TypeAssociationController@search');
        Route::get('/{id}', 'Association\TypeAssociationController@find');
        Route::delete('/{id}', 'Association\TypeAssociationController@destroy');
        Route::post('/', 'Association\TypeAssociationController@store');
        Route::match(['post', 'put'], '/{id}', 'Association\TypeAssociationController@update');
    });


    - la methode get
        - lister tous les types de la bd
                DONNÉE ENTRER
                URL: http://localhost:8000/api/associations/types

                REPONSE:
{
    "current_page": 1,
    "data": [
        {
            "id": 1,
            "name": "Casandra Price",
            "description": "Laboriosam voluptatem perferendis et qui ducimus. Perferendis labore sed et rerum placeat sunt odio. Non vel iusto quia ipsum. Enim perspiciatis aut voluptate.",
            "created_at": "2020-06-19T10:14:44.000000Z",
            "updated_at": "2020-06-19T10:14:44.000000Z"
        }
    ],
    "first_page_url": "http://localhost:8000/api/associations/types?page=1",
    "from": 1,
    "next_page_url": null,
    "path": "http://localhost:8000/api/associations/types",
    "per_page": 15,
    "prev_page_url": null,
    "to": 10
}

      - rechercher un type par son id 
            DONNÉE ENTRER
            URL: http://localhost:8000/api/associations/types/1
            RESULTAT: 

        {
            "id": 1,
            "name": "Casandra Price",
            "description": "Laboriosam voluptatem perferendis et qui ducimus. Perferendis labore sed et rerum placeat sunt odio. Non vel iusto quia ipsum. Enim perspiciatis aut voluptate.",
            "created_at": "2020-06-19T10:14:44.000000Z",
            "updated_at": "2020-06-19T10:14:44.000000Z"
        }

    -rechercher un type à partir d'un element et d'une colonne
            DONNÉE ENTRER:
            URL: http://localhost:8000/api/associations/types/search?q=lab&field=description

            REPONSE:

{
    "current_page": 1,
    "data": [
        {
            "id": 1,
            "name": "Casandra Price",
            "description": "Laboriosam voluptatem perferendis et qui ducimus. Perferendis labore sed et rerum placeat sunt odio. Non vel iusto quia ipsum. Enim perspiciatis aut voluptate.",
            "created_at": "2020-06-19T10:14:44.000000Z",
            "updated_at": "2020-06-19T10:14:44.000000Z"
        }
    ],
    "first_page_url": "http://localhost:8000/api/associations/types/search?page=1",
    "from": 1,
    "next_page_url": null,
    "path": "http://localhost:8000/api/associations/types/search",
    "per_page": 15,
    "prev_page_url": null,
    "to": 2
}

    - la methode post
        - ajour d'un nouveau type
            DONNÉE ENTRER
            {
                "name": "theo",
                "description": "theo"
            }
            URL: http://localhost:8000/api/associations/types
            REPONSE
            {
                "name": "theo",
                "description": "theo",
                "updated_at": "2020-06-19T16:06:48.000000Z",
                "created_at": "2020-06-19T16:06:48.000000Z",
                "id": 11
            }

    - modification d'un type

        DONNÉE ENTRER

            {
                "name": "theophane",
                "description": "theo"
            }
            URL: http://localhost:8000/api/associations/types/11
            REPONSE
            {
                "id": 11,
                "name": "theophane",
                "description": "theo",
                "updated_at": "2020-06-19T16:06:48.000000Z",
                "created_at": "2020-06-19T16:06:48.000000Z"
                
            }

    la methode delete

            -suppression d'un type de la bd

                DONNÉE ENTRER

                URL: http://localhost:8000/api/associations/types/11

                REPONSE:
                []

///////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////
    Route::group(['prefix' => 'evenements'], function () {
        Route::get('/', 'Association\EvenementController@index');
        Route::get('/search', 'Association\EvenementController@search');
        Route::get('/{id}', 'Association\EvenementController@find');
        Route::delete('/{id}', 'Association\EvenementController@destroy');
        Route::post('/', 'Association\EvenementController@store');
        Route::match(['post', 'put'], '/{id}', 'Association\EvenementController@update');
    });

    - la methode get
        - lister tous les evenements de la bd
                DONNÉE ENTRER
                URL: http://localhost:8000/api/associations/evenements

                REPONSE:

                {
            "current_page": 1,
            "data": [
                {
                    "id": 1,
                    "raison": "Doloribus suscipit unde voluptas quas.",
                    "description": "Esse vel perspiciatis nobis ea.",
                    "start_event_date": "1980-07-13",
                    "end_event_date": "2012-11-24",
                    "start_hour": "16:32:45",
                    "end_hour": "04:06:21",
                    "created_at": "2020-06-19T10:14:45.000000Z",
                    "updated_at": "2020-06-19T10:14:45.000000Z",
                    "association_id": 63
                },
            
            ],
            "first_page_url": "http://localhost:8000/api/associations/evenements?page=1",
            "from": 1,
            "next_page_url": "http://localhost:8000/api/associations/evenements?page=2",
            "path": "http://localhost:8000/api/associations/evenements",
            "per_page": 15,
            "prev_page_url": null,
            "to": 15
            }

      - rechercher un evenement par son id 
            DONNÉE ENTRER
            URL: http://localhost:8000/api/associations/evenements/2
            RESULTAT: 

            {
        "id": 2,
        "raison": "Animi eius repudiandae quo possimus praesentium eum.",
        "description": "Quibusdam enim temporibus voluptatum minima necessitatibus adipisci.",
        "start_event_date": "1998-04-20",
        "end_event_date": "1992-03-17",
        "start_hour": "12:00:49",
        "end_hour": "13:35:34",
        "created_at": "2020-06-19T10:14:45.000000Z",
        "updated_at": "2020-06-19T10:14:45.000000Z",
        "association_id": 73
        }

    -rechercher un evenement à partir d'un element et d'une colonne
            DONNÉE ENTRER:
            URL: http://localhost:8000/api/associations/evenements/search?q=animi&field=raison

            REPONSE:

            {
        "current_page": 1,
        "data": [
            {
                "id": 2,
                "raison": "Animi eius repudiandae quo possimus praesentium eum.",
                "description": "Quibusdam enim temporibus voluptatum minima necessitatibus adipisci.",
                "start_event_date": "1998-04-20",
                "end_event_date": "1992-03-17",
                "start_hour": "12:00:49",
                "end_hour": "13:35:34",
                "created_at": "2020-06-19T10:14:45.000000Z",
                "updated_at": "2020-06-19T10:14:45.000000Z",
                "association_id": 73
            }
        ],
        "first_page_url": "http://localhost:8000/api/associations/evenements/search?page=1",
        "from": 1,
        "next_page_url": null,
        "path": "http://localhost:8000/api/associations/evenements/search",
        "per_page": 15,
        "prev_page_url": null,
        "to": 1
        }

    - la methode post
        - ajour d'un nouveau evenement
            DONNÉE ENTRER
            {
        "raison": "theo",
        "description": "theo junion\npaul jeanne",
        "start_event_date": "2020-09-18",
        "end_event_date": "2025-09-18",
        "start_hour": "12:28:52",
        "end_hour": "18:28:00",
        "association_id": "1"
        }
            URL: http://localhost:8000/api/associations/evenements
            REPONSE

            {
        "raison": "theo",
        "description": "theo junion\npaul jeanne",
        "start_event_date": "2020-09-18",
        "end_event_date": "2025-09-18",
        "start_hour": "12:28:52",
        "end_hour": "18:28:00",
        "association_id": "1",
        "updated_at": "2020-06-19T10:42:44.000000Z",
        "created_at": "2020-06-19T10:42:44.000000Z",
        "id": 22
        }

    - modification d'un evenement

        DONNÉE ENTRER

        {
        "raison": "jeanne",
        "description": "jude junion\npaul jeanne",
        "start_event_date": "2020-09-18",
        "end_event_date": "2025-09-18",
        "start_hour": "12:28:52",
        "end_hour": "18:28:00",
        "association_id": "1"
        }
        URL: http://localhost:8000/api/associations/evenements/22

        REPONSE:

        {
            "id": 22,
            "raison": "jeanne",
            "description": "jude junion\npaul jeanne",
            "start_event_date": "2020-09-18",
            "end_event_date": "2025-09-18",
            "start_hour": "12:28:52",
            "end_hour": "18:28:00",
            "created_at": "2020-06-19T10:42:44.000000Z",
            "updated_at": "2020-06-19T10:50:00.000000Z",
            "association_id": "1"
        }

    la methode delete

            -suppression d'un evenement de la bd

                DONNÉE ENTRER

                URL: http://localhost:8000/api/associations/evenements/22

                REPONSE:
                []


/////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////

    Route::group(['prefix' => 'member_association'], function () {
        Route::get('/', 'Association\MemberAssociationController@index');
        Route::get('/search', 'Association\MemberAssociationController@search');
        Route::get('/{id}', 'Association\MemberAssociationController@find');
        Route::delete('/{id}', 'Association\MemberAssociationController@destroy');
        Route::post('/', 'Association\MemberAssociationController@store');
        Route::match(['post', 'put'], '/{id}', 'Association\MemberAssociationController@update');
    });
        - la methode get
        - lister tous les member_association de la bd
                DONNÉE ENTRER
                URL: http://localhost:8000/api/associations/member_association/

                REPONSE:

                {
        "current_page": 1,
        "data": [
            {
                "id": 1,
                "date_adhesion": "2004-09-08",
                "status": "ACCEPTED",
                "created_at": "2020-06-19T10:14:46.000000Z",
                "updated_at": "2020-06-19T10:14:46.000000Z",
                "user_id": 7,
                "statut_id": 1
            }
        ],
        "first_page_url": "http://localhost:8000/api/associations/member_association?page=1",
        "from": 1,
        "next_page_url": "http://localhost:8000/api/associations/member_association?page=2",
        "path": "http://localhost:8000/api/associations/member_association",
        "per_page": 15,
        "prev_page_url": null,
        "to": 15
        }

      - rechercher un member_association par son id 
            DONNÉE ENTRER
            URL: http://localhost:8000/api/associations/member_association/1
            RESULTAT: 

            {
        "id": 1,
        "date_adhesion": "2004-09-08",
        "status": "ACCEPTED",
        "created_at": "2020-06-19T10:14:46.000000Z",
        "updated_at": "2020-06-19T10:14:46.000000Z",
        "user_id": 7,
        "statut_id": 1
        }

    -rechercher un member_association à partir d'un element et d'une colonne
            DONNÉE ENTRER:
            URL: http://localhost:8000/api/associations/member_association/search?q=2004&field=date_adhesion

            REPONSE:

            {
        "current_page": 1,
        "data": [
            {
                "id": 1,
                "date_adhesion": "2004-09-08",
                "status": "ACCEPTED",
                "created_at": "2020-06-19T10:14:46.000000Z",
                "updated_at": "2020-06-19T10:14:46.000000Z",
                "user_id": 7,
                "statut_id": 1
            }
        ],
        "first_page_url": "http://localhost:8000/api/associations/member_association/search?page=1",
        "from": 1,
        "next_page_url": null,
        "path": "http://localhost:8000/api/associations/member_association/search",
        "per_page": 15,
        "prev_page_url": null,
        "to": 1
        }

    - la methode post
        - ajour d'un nouveau member_association
            DONNÉE ENTRER
                {
            "date_adhesion": "2020-06-11",
            "status": "ACCEPTED",
            "user_id": "1",
            "statut_id": "2"
            }
            URL: http://localhost:8000/api/associations/member_association/
            REPONSE

            {
        "date_adhesion": "2020-06-11",
        "status": "ACCEPTED",
        "user_id": "1",
        "statut_id": "2",
        "updated_at": "2020-06-19T11:26:54.000000Z",
        "created_at": "2020-06-19T11:26:54.000000Z",
        "id": 22
        }

    - modification d'un member_association

        DONNÉE ENTRER

        {
            "date_adhesion": "2020-06-11",
            "status": "PENDING",
            "user_id": "1",
            "statut_id": "2"
            }
        URL: http://localhost:8000/api/associations/member_association/22

        REPONSE:

           {
        "id": 22,       
        "date_adhesion": "2020-06-11",
        "status": "PENDING",
        "user_id": "1",
        "statut_id": "2",
        "updated_at": "2020-06-19T11:26:54.000000Z",
        "created_at": "2020-06-19T11:26:54.000000Z"
        
        }

    la methode delete

            -suppression d'un member_association de la bd

                DONNÉE ENTRER

                URL: http://localhost:8000/api/associations/member_association/22

                REPONSE:
                []
//////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////
    Route::group(['prefix' => 'statut'], function () {
        Route::get('/', 'Association\StatusController@index');
        Route::get('/search', 'Association\StatusController@search');
        Route::get('/{id}', 'Association\StatusController@find');
        Route::delete('/{id}', 'Association\StatusController@destroy');
        Route::post('/', 'Association\StatusController@store');
        Route::match(['post', 'put'], '/{id}', 'Association\StatusController@update');
    });


 - la methode get
        - lister tous les statuts de la bd
                DONNÉE ENTRER
                URL: http://localhost:8000/api/associations/statut/

                REPONSE:
                    {
                        "current_page": 1,
                        "data": [
                            {
                                "id": 1,
                                "name_post": "Quaerat voluptate eveniet fugit voluptate aspernatur doloremque.",
                                "role_post": "Qui laudantium consequatur est doloribus sunt fugit deleniti.",
                                "created_at": "2020-06-19T10:14:45.000000Z",
                                "updated_at": "2020-06-19T10:14:45.000000Z"
                            }
                        ],
                        "first_page_url": "http://localhost:8000/api/associations/statut?page=1",
                        "from": 1,
                        "next_page_url": "http://localhost:8000/api/associations/statut?page=2",
                        "path": "http://localhost:8000/api/associations/statut",
                        "per_page": 15,
                        "prev_page_url": null,
                        "to": 15
                    }
      - rechercher un statut par son id 
            DONNÉE ENTRER
            URL: http://localhost:8000/api/associations/statut/21
            RESULTAT: 

            {
            {
        "id": 21,
        "name_post": "Illum minus cumque nulla.",
        "role_post": "Cumque qui est ea labore.",
        "created_at": "2020-06-19T10:14:46.000000Z",
        "updated_at": "2020-06-19T10:14:46.000000Z"
        }

    -rechercher un statut à partir d'un statut et d'une colonne
                DONNÉE ENTRER:
                URL: http://localhost:8000/api/associations/statut/search?q=sed&field=name_post

                REPONSE:

                {
        "current_page": 1,
        "data": [
            {
                "id": 3,
                "name_post": "Omnis soluta voluptatem quam ut consequatur illo sit sed.",
                "role_post": "Aut ducimus pariatur adipisci voluptates sint similique laboriosam.",
                "created_at": "2020-06-19T10:14:45.000000Z",
                "updated_at": "2020-06-19T10:14:45.000000Z"
            }
        ],
        "first_page_url": "http://localhost:8000/api/associations/statut/search?page=1",
        "from": 1,
        "next_page_url": null,
        "path": "http://localhost:8000/api/associations/statut/search",
        "per_page": 15,
        "prev_page_url": null,
        "to": 2
        }

    - la methode post
        - ajour d'un nouveau statut
            DONNÉE ENTRER
            {
                "name_post": "theophane",
                "role_post": "theo junior"
            }
        
           URL: http://localhost:8000/api/associations/statut/21
            REPONSE

             {
                
                "name_post": "theophane",
                "role_post": "theo junior",
                "created_at": "2020-06-19T10:14:46.000000Z",
                "updated_at": "2020-06-19T11:10:39.000000Z",
                "id": 21,
            }
    - modification d'un statut

        DONNÉE ENTRER
            {
                "name_post": "theophane",
                "role_post": "theo junior"
            }
        
           URL: http://localhost:8000/api/associations/statut/21
            REPONSE

             {
                "id": 21,
                "name_post": "theophane",
                "role_post": "theo junior",
                "created_at": "2020-06-19T10:14:46.000000Z",
                "updated_at": "2020-06-19T11:10:39.000000Z"
            }
    la methode delete

            -suppression d'un statut de la bd

                DONNÉE ENTRER

                URL: http://localhost:8000/api/associations/statut/21

                REPONSE:
                []
//////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////    
    Route::group(['prefix' => 'presences'], function () {
        Route::get('/', 'Association\EventPresenceMemberAssociationController@index');
        Route::get('/search', 'Association\EventPresenceMemberAssociationController@search');
        Route::get('/{id}', 'Association\EventPresenceMemberAssociationController@find');
        Route::get('/{id}/member_associations', 'Association\EventPresenceMemberAssociationController@findPresence');
        Route::delete('/{id}', 'Association\EventPresenceMemberAssociationController@destroy');
        Route::post('/', 'Association\EventPresenceMemberAssociationController@store');
        Route::match(['post', 'put'], '/{id}', 'Association\EventPresenceMemberAssociationController@update');
    });


 - la methode get
        - lister tous les presences de la bd
                DONNÉE ENTRER
                URL: http://localhost:8000/api/associations/presences

                REPONSE:
                    {
    "current_page": 1,
    "data": [
        {
            "id": 1,
            "isPresence": 1,
            "evenement_id": 18,
            "member_association_id": 18,
            "created_at": "2020-06-19T10:14:46.000000Z",
            "updated_at": "2020-06-19T10:14:46.000000Z"
        }
    ],
    "first_page_url": "http://localhost:8000/api/associations/presences?page=1",
    "from": 1,
    "next_page_url": "http://localhost:8000/api/associations/presences?page=2",
    "path": "http://localhost:8000/api/associations/presences",
    "per_page": 15,
    "prev_page_url": null,
    "to": 15
}
      - rechercher un presence par son id 
            DONNÉE ENTRER
            URL: http://localhost:8000/api/associations/presences/1
            RESULTAT: 
                {
                    "id": 1,
                    "isPresence": 1,
                    "evenement_id": 18,
                    "member_association_id": 18,
                    "created_at": "2020-06-19T10:14:46.000000Z",
                    "updated_at": "2020-06-19T10:14:46.000000Z"
                }
    -rechercher un presence à partir d'un element et d'une colonne
                DONNÉE ENTRER:
                URL: http://localhost:8000/api/associations/presences/search?q=1&field=isPresence

                REPONSE:

               {
    "current_page": 1,
    "data": [
        {
            "id": 1,
            "isPresence": 1,
            "evenement_id": 18,
            "member_association_id": 18,
            "created_at": "2020-06-19T10:14:46.000000Z",
            "updated_at": "2020-06-19T10:14:46.000000Z"
        }
    ],
    "first_page_url": "http://localhost:8000/api/associations/presences/search?page=1",
    "from": 1,
    "next_page_url": null,
    "path": "http://localhost:8000/api/associations/presences/search",
    "per_page": 15,
    "prev_page_url": null,
    "to": 7
}

    - la methode post
        - ajour d'un nouveau presence
            DONNÉE ENTRER
                    {
            "evenement_id": "1",
            "member_association_id": "1",
            "isPresence": "0",
        }
        
           URL: http://localhost:8000/api/associations/presences
            REPONSE

                {
                    "evenement_id": "1",
                    "member_association_id": "1",
                    "isPresence": "0",
                    "updated_at": "2020-06-19T11:43:11.000000Z",
                    "created_at": "2020-06-19T11:43:11.000000Z",
                    "id": 22
                }
    - modification d'un presence

                 DONNÉE ENTRER
                    {
            "evenement_id": "1",
            "member_association_id": "2",
            "isPresence": "0",
        }
        
           URL: http://localhost:8000/api/associations/presences/22
            REPONSE

                {
                    "id": 22,
                    "evenement_id": "1",
                    "member_association_id": "2",
                    "isPresence": "0",
                    "updated_at": "2020-06-19T11:43:11.000000Z",
                    "created_at": "2020-06-19T11:43:11.000000Z"
                    
                }
    la methode delete

            -suppression d'un element de la bd

                DONNÉE ENTRER

                URL: http://localhost:8000/api/associations/presences/21

                REPONSE:
                []
/////////////////////////////////////////////////////////////////////////////////////////////////////
LA METHODE DE RECHERCHE ET LISTING DES PRESENCES D'UN MEMBRE ASSOCIATION AU EVENEMENT CECI EN FONCTION 
DE ID DU MEMBRE ASSOCIATION.
///////////////////////////////////////////////////////////////////////////////////////////////////////
 
 - la methode findPresence

    DONNÉE ENTRER

    URL: http://localhost:8000/api/associations/presences/2/member_associations

    REPONSE: 

    {
    "current_page": 1,
    "data": [
        {
            "id": 15,
            "isPresence": 0,
            "evenement_id": 15,
            "member_association_id": 2,
            "created_at": "2020-06-19T10:14:45.000000Z",
            "updated_at": "2020-06-19T10:14:45.000000Z",
            "event_presence_member_association_id": 10,
            "raison": "Architecto eveniet quidem tempora et eaque cum aliquam.",
            "description": "Aut est iste tenetur aut.",
            "start_event_date": "2019-01-15",
            "end_event_date": "2002-07-13",
            "start_hour": "09:53:02",
            "end_hour": "00:35:52",
            "association_id": 67
        }
    ],
    "first_page_url": "http://localhost:8000/api/associations/presences/2/member_associations?page=1",
    "from": 1,
    "next_page_url": null,
    "path": "http://localhost:8000/api/associations/presences/2/member_associations",
    "per_page": 15,
    "prev_page_url": null,
    "to": 3
}
